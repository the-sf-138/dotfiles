(defun get-evil-state-map(s)
  (cl-case s
    ('normal evil-normal-state-map)
    ('visual evil-visual-state-map)
    ('operator evil-operator-state-map)
    ('replace evil-replace-state-map)
    ('motion evil-motion-state-map)))

(defun handle-stuff(state)
  (let  ((t-evil-map (get-evil-state-map state)))
    (evil-define-key* state 'global
                      "f" (lookup-key t-evil-map "e")
                      "p" (lookup-key t-evil-map "r")
                      "g" (lookup-key t-evil-map "t")
                      "j" (lookup-key t-evil-map "y")
                      "l" (lookup-key t-evil-map "u")
                      "u" (lookup-key t-evil-map "i")
                      "y" (lookup-key t-evil-map "o")
                      ";" (lookup-key t-evil-map "p")
                      "r" (lookup-key t-evil-map "s")
                      "s" (lookup-key t-evil-map "d")
                      "t" (lookup-key t-evil-map "f")
                      "d" (lookup-key t-evil-map "g")
                      "n" (lookup-key t-evil-map "j")
                      "e" (lookup-key t-evil-map "k")
                      "i" (lookup-key t-evil-map "l")
                      "o" (lookup-key t-evil-map ";")
                      "k" (lookup-key t-evil-map "n")
                      "." (lookup-key t-evil-map ",")
                      "," (lookup-key t-evil-map ".")
                                        ; caps
                      "F" (lookup-key t-evil-map "E")
                      "P" (lookup-key t-evil-map "R")
                      "G" (lookup-key t-evil-map "T")
                      "J" (lookup-key t-evil-map "Y")
                      "L" (lookup-key t-evil-map "U")
                      "U" (lookup-key t-evil-map "I")
                      "Y" (lookup-key t-evil-map "O")
                      ":" (lookup-key t-evil-map "P")
                      "R" (lookup-key t-evil-map "S")
                      "S" (lookup-key t-evil-map "D")
                      "T" (lookup-key t-evil-map "F")
                      "D" (lookup-key t-evil-map "G")
                      "N" (lookup-key t-evil-map "J")
                      "E" (lookup-key t-evil-map "K")
                      "I" (lookup-key t-evil-map "L")
                      "O" (lookup-key t-evil-map ":")
                      "K" (lookup-key t-evil-map "N"))))

(defun do-evil-remap()
    (handle-stuff 'motion)
    (handle-stuff 'normal)
    (handle-stuff 'visual)
    (handle-stuff 'operator)
    (evil-define-key 'motion 'global (kbd "dd") 'evil-goto-first-line)
    (evil-define-key 'motion 'global (kbd ".") 'evil-repeat)
    (evil-define-key 'motion 'global (kbd "l") 'undo-fu-only-undo)
    (evil-define-key 'motion 'global (kbd "C-r") 'undo-fu-only-redo))

(do-evil-remap)

